document.addEventListener('DOMContentLoaded', function(){
  const input = document.getElementById('photoInput');
  const preview = document.getElementById('preview');
  const suggestionsEl = document.getElementById('suggestions');
  const portionControl = document.getElementById('portionControl');
  const portionInput = document.getElementById('portionInput');
  const analyzeBtn = document.getElementById('analyzeBtn');
  const resultEl = document.getElementById('result');
  let currentFoodId = null;
  let currentFoodName = null;

  // X·ª≠ l√Ω s·ª± ki·ªán khi file ·∫£nh ƒë∆∞·ª£c ch·ªçn
  input.addEventListener('change', async (e)=>{
    const file = e.target.files[0];
    if(!file) return;
    
    // Hi·ªÉn th·ªã ·∫£nh preview
    preview.src = URL.createObjectURL(file);
    preview.style.display = 'block';
    
    // T·∫°o FormData ƒë·ªÉ g·ª≠i ·∫£nh l√™n Backend
    const fd = new FormData();
    fd.append('photo', file);
    
    // 1. G·ªåI API UPLOAD ƒë·ªÉ nh·∫≠n di·ªán ·∫£nh (Clarifai)
    const r = await fetch('/api/photo/upload', { method:'POST', body: fd });
    const j = await r.json();
    
    suggestionsEl.innerHTML = '';
    
    if (j.error) {
        suggestionsEl.innerHTML = `<p style="color: red;">L·ªói Server: ${j.error}</p>`;
        portionControl.style.display = 'none';
        return;
    }

    // 2. HI·ªÇN TH·ªä C√ÅC G·ª¢I √ù (SUGGESTIONS)
    (j.suggestions || []).forEach(s=>{
      const btn = document.createElement('button');
      // Hi·ªÉn th·ªã t√™n m√≥n ƒÉn v√† nh√£n nh·∫≠n di·ªán (v√≠ d·ª•: Ph·ªü G√† (Chicken Pho))
      btn.textContent = `${s.name} (Nh√£n: ${s.match_label})`;
      btn.style.display = 'block';
      btn.style.marginTop = '5px';
      btn.style.padding = '8px 12px';
      btn.style.backgroundColor = '#007bff';
      btn.style.color = 'white';
      btn.style.border = 'none';
      btn.style.cursor = 'pointer';
      btn.onclick = ()=> {
        currentFoodId = s.food_id;
        currentFoodName = s.name;
        portionInput.value = 400; // Thi·∫øt l·∫≠p m·∫∑c ƒë·ªãnh 400g (ph·ªï bi·∫øn cho m√≥n Vi·ªát)
        
        // Hi·ªÉn th·ªã khu v·ª±c ch·ªânh kh·∫©u ph·∫ßn
        portionControl.style.display = 'block';
        resultEl.innerHTML = `<p>ƒê√£ ch·ªçn: <b>${currentFoodName}</b>. Vui l√≤ng nh·∫≠p kh·∫©u ph·∫ßn (g).</p>`;
      };
      suggestionsEl.appendChild(btn);
    });
    
    // N·∫øu kh√¥ng c√≥ g·ª£i √Ω n√†o
    if((j.suggestions || []).length === 0){
      suggestionsEl.innerHTML = `<p style="color: red; font-weight: bold;">No suggestions (Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c m√≥n ƒÉn n√†o kh·ªõp).</p>`;
    }
  });

  // X·ª≠ l√Ω s·ª± ki·ªán khi ng∆∞·ªùi d√πng b·∫•m n√∫t "Analyze"
  analyzeBtn.addEventListener('click', async ()=>{
    if(!currentFoodId) return alert('Vui l√≤ng ch·ªçn m·ªôt g·ª£i √Ω m√≥n ƒÉn tr∆∞·ªõc.');
    
    const portion = parseFloat(portionInput.value) || 0;
    
    // 3. G·ªåI API CONFIRM ƒë·ªÉ t√≠nh to√°n dinh d∆∞·ª°ng theo kh·∫©u ph·∫ßn
    const r = await fetch('/api/photo/confirm', {
      method:'POST',
      headers:{'Content-Type':'application/json'},
      body: JSON.stringify({ food_id: currentFoodId, portion_g: portion })
    });
    
    const j = await r.json();
    
    if(j.result){
      const res = j.result;
      
      // 4. HI·ªÇN TH·ªä K·∫æT QU·∫¢ V√Ä L·ªúI KHUY√äN (T∆∞∆°ng t·ª± nh∆∞ giao di·ªán m·∫´u)
      let html = `<div style="margin-top: 30px; padding: 20px; border: 2px solid #28a745; border-radius: 8px; background-color: #f7fff7;">
                      <h3>‚úÖ Ph√¢n T√≠ch Dinh D∆∞·ª°ng</h3>
                      <p><b>M√≥n ƒÉn:</b> ${res.name} (${res.portion_g}g)</p>
                      
                      <p style="font-weight: bold;">
                          Calo: <span style="color: #dc3545;">${res.kcal} kcal</span> | 
                          Protein: ${res.protein_g}g | 
                          Carbs: ${res.carbs_g}g | 
                          Fat: ${res.fat_g}g
                      </p>
                      
                      <div style="margin-top: 15px; padding: 15px; background-color: #ffffff; border-radius: 6px;">
                          <h4>üí° Ki·∫øn Th·ª©c Dinh D∆∞·ª°ng V·ªÅ M√≥n ƒÇn N√†y</h4>
                          <p style="margin-bottom: 5px;">${res.name} ${res.description}</p>
                          <p><b>L·ªùi khuy√™n:</b> ${res.advice}</p>
                      </div>
                  </div>`;
                  
      resultEl.innerHTML = html;
    } else if (j.error) {
      resultEl.innerHTML = `<p style="color: red;">L·ªói t√≠nh to√°n: ${j.error}</p>`;
    }
  });
});